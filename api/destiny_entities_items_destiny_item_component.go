/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

package api




// The base item component, filled with properties that are generally useful to know in any item request or that don't feel worthwhile to put in their own component.
type DestinyEntitiesItemsDestinyItemComponent struct {
	// The identifier for the item's definition, which is where most of the useful static information for the item can be found.
	ItemHash uint32 `json:"itemHash,omitempty"`
	// If the item is instanced, it will have an instance ID. Lack of an instance ID implies that the item has no distinct local qualities aside from stack size.
	ItemInstanceId int64 `json:"itemInstanceId,omitempty,string"`
	// The quantity of the item in this stack. Note that Instanced items cannot stack. If an instanced item, this value will always be 1 (as the stack has exactly one item in it)
	Quantity int32 `json:"quantity,omitempty"`
	// If the item is bound to a location, it will be specified in this enum.
	BindStatus DestinyItemBindStatus `json:"bindStatus,omitempty"`
	// An easy reference for where the item is located. Redundant if you got the item from an Inventory, but useful when making detail calls on specific items.
	Location DestinyItemLocation `json:"location,omitempty"`
	// The hash identifier for the specific inventory bucket in which the item is located.
	BucketHash int64 `json:"bucketHash,omitempty"`
	// If there is a known error state that would cause this item to not be transferable, this Flags enum will indicate all of those error states. Otherwise, it will be 0 (CanTransfer).
	TransferStatus DestinyTransferStatuses `json:"transferStatus,omitempty"`
	// If the item can be locked, this will indicate that state.
	Lockable bool `json:"lockable,omitempty"`
	// A flags enumeration indicating the states of the item: whether it's tracked or locked for example.
	State DestinyItemState `json:"state,omitempty"`
}
